{"ast":null,"code":"var _jsxFileName = \"/Users/ardaersoy/Desktop/stylish-components/src/Components/Gauge.jsx\";\nimport React from 'react';\nimport { arc } from 'd3-shape';\nimport { scaleLinear } from \"d3-scale\";\n\nconst Gauge = ({\n  value = 50,\n  min = 0,\n  max = 100,\n  label,\n  units\n}) => {\n  const backgroundArc = arc().innerRadius(0.65).outerRadius(1).startAngle(-Math.PI / 2).endAngle(Math.PI / 2).cornerRadius(1)();\n  const percentScale = scaleLinear().domain([min, max]).range([0, 1]);\n  const percent = percentScale(value);\n  const angleScale = scaleLinear().domain([0, 1]).range([-Math.PI / 2, Math.PI / 2]).clamp(true);\n  const angle = angleScale(percent);\n  const filledArc = arc().innnerRadius(0.65).outerRadius(1).startAngle(-Math.PI / 2).endAngle(angle).cornerRadius(1)();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"9em\",\n    viewBox: [-1, -1, 2, 1].join(\" \") // parameters respectively x,y, width, height\n    ,\n    style: {\n      overflow: 'visible'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: backgroundArc,\n    fill: \"#dbdbe7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: filledArc,\n    fill: \"#9980FA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Gauge;","map":{"version":3,"sources":["/Users/ardaersoy/Desktop/stylish-components/src/Components/Gauge.jsx"],"names":["React","arc","scaleLinear","Gauge","value","min","max","label","units","backgroundArc","innerRadius","outerRadius","startAngle","Math","PI","endAngle","cornerRadius","percentScale","domain","range","percent","angleScale","clamp","angle","filledArc","innnerRadius","join","overflow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,SAASC,WAAT,QAA4B,UAA5B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAcC,EAAAA,GAAG,GAAG,CAApB;AAAuBC,EAAAA,GAAG,GAAG,GAA7B;AAAkCC,EAAAA,KAAlC;AAAyCC,EAAAA;AAAzC,CAAD,KAAsD;AAClE,QAAMC,aAAa,GAAGR,GAAG,GACtBS,WADmB,CACP,IADO,EAEnBC,WAFmB,CAEP,CAFO,EAGnBC,UAHmB,CAGR,CAACC,IAAI,CAACC,EAAN,GAAW,CAHH,EAInBC,QAJmB,CAIVF,IAAI,CAACC,EAAL,GAAU,CAJA,EAKnBE,YALmB,CAKN,CALM,GAAtB;AAQA,QAAMC,YAAY,GAAGf,WAAW,GAC7BgB,MADkB,CACX,CAACb,GAAD,EAAKC,GAAL,CADW,EAElBa,KAFkB,CAEZ,CAAC,CAAD,EAAG,CAAH,CAFY,CAArB;AAIA,QAAMC,OAAO,GAAGH,YAAY,CAACb,KAAD,CAA5B;AAEA,QAAMiB,UAAU,GAAGnB,WAAW,GAC3BgB,MADgB,CACT,CAAC,CAAD,EAAG,CAAH,CADS,EAEhBC,KAFgB,CAEV,CAAC,CAACN,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAeD,IAAI,CAACC,EAAL,GAAU,CAAzB,CAFU,EAGhBQ,KAHgB,CAGV,IAHU,CAAnB;AAKA,QAAMC,KAAK,GAAGF,UAAU,CAACD,OAAD,CAAxB;AAEA,QAAMI,SAAS,GAAGvB,GAAG,GAClBwB,YADe,CACF,IADE,EAEfd,WAFe,CAEH,CAFG,EAGfC,UAHe,CAGJ,CAACC,IAAI,CAACC,EAAN,GAAW,CAHP,EAIfC,QAJe,CAINQ,KAJM,EAKfP,YALe,CAKF,CALE,GAAlB;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,OAAO,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAeU,IAAf,CAAoB,GAApB,CAFX,CAEqC;AAFrC;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACI,IAAA,CAAC,EAAElB,aADP;AAEI,IAAA,IAAI,EAAC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eASE;AACI,IAAA,CAAC,EAAEe,SADP;AAEI,IAAA,IAAI,EAAC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF;AAkBD,CAhDD;;AAkDA,eAAerB,KAAf","sourcesContent":["import React from 'react'\nimport { arc } from 'd3-shape'\nimport { scaleLinear } from \"d3-scale\"\n\nconst Gauge = ({ value = 50, min = 0, max = 100, label, units }) => {\n  const backgroundArc = arc()\n    .innerRadius(0.65)\n    .outerRadius(1)\n    .startAngle(-Math.PI / 2)\n    .endAngle(Math.PI / 2)\n    .cornerRadius(1)\n    ()\n\n  const percentScale = scaleLinear()\n    .domain([min,max])\n    .range([0,1])\n\n  const percent = percentScale(value)\n\n  const angleScale = scaleLinear()\n    .domain([0,1])\n    .range([-Math.PI / 2, Math.PI / 2])\n    .clamp(true)\n\n  const angle = angleScale(percent)\n\n  const filledArc = arc()\n    .innnerRadius(0.65)\n    .outerRadius(1)\n    .startAngle(-Math.PI / 2)\n    .endAngle(angle)\n    .cornerRadius(1)\n    ()\n\n  return (\n    <div>\n      <svg\n        width=\"9em\"\n        viewBox={[-1, -1, 2, 1].join(\" \")} // parameters respectively x,y, width, height\n        style={{ overflow: 'visible' }}\n      >\n        <path\n            d={backgroundArc}\n            fill=\"#dbdbe7\"\n        />\n        <path\n            d={filledArc}\n            fill=\"#9980FA\"\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default Gauge"]},"metadata":{},"sourceType":"module"}