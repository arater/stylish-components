{"ast":null,"code":"var _jsxFileName = \"/Users/ardaersoy/Desktop/stylish-components/src/Components/Gauge.jsx\";\nimport React from 'react';\nimport { arc } from 'd3-shape';\nimport { scaleLinear } from \"d3-scale\";\nimport { format } from \"d3-format\";\n\nconst Gauge = ({\n  value = 50,\n  min = 0,\n  max = 100,\n  label,\n  units\n}) => {\n  const backgroundArc = arc().innerRadius(0.65).outerRadius(1).startAngle(-Math.PI / 2).endAngle(Math.PI / 2).cornerRadius(1)();\n  const percentScale = scaleLinear().domain([min, max]).range([0, 1]);\n  const percent = percentScale(value);\n  const angleScale = scaleLinear().domain([0, 1]).range([-Math.PI / 2, Math.PI / 2]).clamp(true);\n  const angle = angleScale(percent);\n  const filledArc = arc().innerRadius(0.65).outerRadius(1).startAngle(-Math.PI / 2).endAngle(angle).cornerRadius(1)();\n  const colorScale = scaleLinear().domain([0, 1]).range([\"#dbdbe7\", \"#9980FA\"]);\n  const gradientSteps = colorScale.ticks(10).map(value => colorScale(value));\n  const markerLocation = getCoordsOnArc(angle, 1 - (1 - 0.65) / 2);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"9em\",\n    viewBox: [-1, -1, 2, 1].join(\" \") // parameters respectively x,y, width, height\n    ,\n    style: {\n      overflow: 'visible'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"Gauge__gradient\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: \"-1\",\n    x2: \"1\",\n    y2: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, gradientSteps.map((color, index) => /*#__PURE__*/React.createElement(\"stop\", {\n    key: color,\n    stopColor: color,\n    offset: `${index / (gradientSteps.length - 1)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"path\", {\n    d: backgroundArc,\n    fill: \"#dbdbe7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: filledArc,\n    fill: \"#9980FA\",\n    fill: \"url(#Gauge__gradient)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: markerLocation[0],\n    cy: markerLocation[1],\n    r: \"0.2\",\n    stroke: \"#2c3e50\",\n    strokeWidth: \"0.01\",\n    fill: colorScale(percent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.136364 0.0290102C0.158279 -0.0096701 0.219156 -0.00967009 0.241071 0.0290102C0.297078 0.120023 0.375 0.263367 0.375 0.324801C0.375 0.422639 0.292208 0.5 0.1875 0.5C0.0852272 0.5 -1.8346e-08 0.422639 -9.79274e-09 0.324801C0.00243506 0.263367 0.0803571 0.120023 0.136364 0.0290102ZM0.1875 0.381684C0.221591 0.381684 0.248377 0.356655 0.248377 0.324801C0.248377 0.292947 0.221591 0.267918 0.1875 0.267918C0.153409 0.267918 0.126623 0.292947 0.126623 0.324801C0.126623 0.356655 0.155844 0.381684 0.1875 0.381684Z\",\n    transform: `rotate(${angle * (180 / Math.PI)}) translate(-0.2, -0.33)`,\n    fill: \"#6a6a85\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"0.4em\",\n      fontSize: \"3em\",\n      lineHeight: \"1em\",\n      fontWeight: \"900\",\n      fontFeatureSettings: \"'zero', 'tnum' 1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, format(\",\")(value)));\n};\n\nconst getCoordsOnArc = (angle, offset = 10) => [Math.cos(angle - Math.PI / 2) * offset, Math.sin(angle - Math.PI / 2) * offset];\n\nexport default Gauge;","map":{"version":3,"sources":["/Users/ardaersoy/Desktop/stylish-components/src/Components/Gauge.jsx"],"names":["React","arc","scaleLinear","format","Gauge","value","min","max","label","units","backgroundArc","innerRadius","outerRadius","startAngle","Math","PI","endAngle","cornerRadius","percentScale","domain","range","percent","angleScale","clamp","angle","filledArc","colorScale","gradientSteps","ticks","map","markerLocation","getCoordsOnArc","join","overflow","color","index","length","marginTop","fontSize","lineHeight","fontWeight","fontFeatureSettings","offset","cos","sin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { arc } from 'd3-shape'\nimport { scaleLinear } from \"d3-scale\"\nimport { format } from \"d3-format\"\n\nconst Gauge = ({ value = 50, min = 0, max = 100, label, units }) => {\n  const backgroundArc = arc()\n    .innerRadius(0.65)\n    .outerRadius(1)\n    .startAngle(-Math.PI / 2)\n    .endAngle(Math.PI / 2)\n    .cornerRadius(1)\n    ()\n\n  const percentScale = scaleLinear()\n    .domain([min,max])\n    .range([0,1])\n\n  const percent = percentScale(value)\n\n  const angleScale = scaleLinear()\n    .domain([0,1])\n    .range([-Math.PI / 2, Math.PI / 2])\n    .clamp(true)\n\n  const angle = angleScale(percent)\n\n  const filledArc = arc()\n    .innerRadius(0.65)\n    .outerRadius(1)\n    .startAngle(-Math.PI / 2)\n    .endAngle(angle)\n    .cornerRadius(1)\n    ()\n\n  const colorScale = scaleLinear()\n    .domain([0,1])\n    .range([\"#dbdbe7\",\"#9980FA\"])\n\n  const gradientSteps = colorScale.ticks(10).map(value => colorScale(value))\n\n  const markerLocation = getCoordsOnArc(\n    angle,\n    1 - ((1 - 0.65) / 2),\n  )\n\n  return (\n    <div>\n      <svg\n        width=\"9em\"\n        viewBox={[-1, -1, 2, 1].join(\" \")} // parameters respectively x,y, width, height\n        style={{ overflow: 'visible' }}\n      >\n        <defs>\n          <linearGradient\n            id=\"Gauge__gradient\"\n            gradientUnits=\"userSpaceOnUse\"\n            x1=\"-1\"\n            x2=\"1\"\n            y2=\"0\">\n                {gradientSteps.map((color, index) => (\n              <stop\n                key={color}\n                stopColor={color}\n                offset={`${\n                  index\n                  / (gradientSteps.length - 1)\n                }`}\n              />\n            ))}\n          </linearGradient>\n        </defs>\n        <path\n            d={backgroundArc}\n            fill=\"#dbdbe7\"\n        />\n        <path\n            d={filledArc}\n            fill=\"#9980FA\"\n            fill=\"url(#Gauge__gradient)\"\n        />\n         <circle\n          cx={markerLocation[0]}\n          cy={markerLocation[1]}\n          r=\"0.2\"\n          stroke=\"#2c3e50\"\n          strokeWidth=\"0.01\"\n          fill={colorScale(percent)}\n        />\n        <path\n          d=\"M0.136364 0.0290102C0.158279 -0.0096701 0.219156 -0.00967009 0.241071 0.0290102C0.297078 0.120023 0.375 0.263367 0.375 0.324801C0.375 0.422639 0.292208 0.5 0.1875 0.5C0.0852272 0.5 -1.8346e-08 0.422639 -9.79274e-09 0.324801C0.00243506 0.263367 0.0803571 0.120023 0.136364 0.0290102ZM0.1875 0.381684C0.221591 0.381684 0.248377 0.356655 0.248377 0.324801C0.248377 0.292947 0.221591 0.267918 0.1875 0.267918C0.153409 0.267918 0.126623 0.292947 0.126623 0.324801C0.126623 0.356655 0.155844 0.381684 0.1875 0.381684Z\"\n          transform={`rotate(${\n            angle * (180 / Math.PI)\n          }) translate(-0.2, -0.33)`}\n          fill=\"#6a6a85\"\n        />\n      </svg>\n      <div style={{\n        marginTop: \"0.4em\",\n        fontSize: \"3em\",\n        lineHeight: \"1em\",\n        fontWeight: \"900\",\n        fontFeatureSettings: \"'zero', 'tnum' 1\",\n      }}>\n        { format(\",\")(value) }\n      </div>\n    </div>\n  )\n}\n\nconst getCoordsOnArc = (angle, offset=10) => [\n    Math.cos(angle - (Math.PI / 2)) * offset,\n    Math.sin(angle - (Math.PI / 2)) * offset,\n  ]\n\nexport default Gauge"]},"metadata":{},"sourceType":"module"}